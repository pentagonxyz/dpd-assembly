/* Macros */

/// @dev Identifies whether an address has contract code associated with it.
/// Input Stack: [address]
/// Output Stack: [is_contract]
#define macro IS_CONTRACT() = takes(1) returns (1) {
    // Returns 0 if no code is associated with the address.
    extcodesize
}

/// @dev Send ETH to a contract.
/// Input Stack: [address, amount]
/// Output Stack: [success]
#define macro SEND_ETH() = takes(2) returns (1) {
    // goal [gas, address, value, 0x00, 0x00, 0x00, 0x00]
    0x00 0x00 0x00 0x00 // [0, 0, 0, 0, value, address]
    swap4 swap1 swap5   // [address, value, 0, 0, 0, 0]
    gas                 // [gas, address, value, 0, 0, 0, 0]
    call                // [success]
}

/// @dev Mask an address, ensuring that only the first 12 bytes are equal to 0.
/// Input Stack: [address]
/// Output Stack: [masked_address]
#define macro MASK_ADDRESS() = takes(1) returns (1) {
    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff
	and
}
